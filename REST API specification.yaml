openapi: 3.0.0
info:
  version: "1.0.0"
  title: Expense Tracker Application
  description: This app is meant to track monthly expenses. Values will be entered by the user. It will save and store inputs and calculate the total amount per timeframe.

servers:
  # TBD

security:
  - OAuth2: [read, write]

paths:
  /ping:
    get:
      summary: Server Status
      description: This operation tests the availability of the server.
      security: []
      responses:
        '200':
          description: Server is available
        '503':
          description: Service Unavailable

  /expenses:
    get:
      summary: Get all expenses
      description: Retrieve all expenses for the authenticated user
      responses:
        '200':
          description: Successfully retrieved expenses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expense'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    
    post:
      summary: Create a new expense
      description: Add a new expense entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseInput'
      responses:
        '201':
          description: Expense created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized

  /expenses/{expenseId}:
    get:
      summary: Get a specific expense
      description: Retrieve details of a specific expense by ID
      parameters:
        - name: expenseId
          in: path
          required: true
          schema:
            type: string
          description: The expense ID
      responses:
        '200':
          description: Successfully retrieved expense
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        '404':
          description: Expense not found
        '401':
          description: Unauthorized
    
    delete:
      summary: Delete an expense
      description: Remove a specific expense by ID
      parameters:
        - name: expenseId
          in: path
          required: true
          schema:
            type: string
          description: The expense ID
      responses:
        '204':
          description: Expense deleted successfully
        '404':
          description: Expense not found
        '401':
          description: Unauthorized

  /user/summary:
    get:
      summary: Get user expense summary
      description: Retrieve expense summary including current month and history
      responses:
        '200':
          description: Successfully retrieved user summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSummary'
        '401':
          description: Unauthorized

components:
  securitySchemes:
    OAuth2: 
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://auth.expensetracker.com/oauth/token
          scopes:
            read: Grants read access to expenses
            write: Grants write access to create and delete expenses

  schemas:
    Expense:
      type: object
      properties:
        id:
          type: string
          example: "exp_1"
        userId:
          type: string
          example: "user_001"
        description:
          type: string
          example: "Grocery shopping"
        amount:
          type: number
          format: float
          example: 150.00
        currency:
          type: string
          example: "USD"
        date:
          type: string
          format: date
          example: "2025-10-15"
        category:
          type: string
          example: "Food"
        createdAt:
          type: string
          format: date-time
          example: "2025-10-15T14:30:00Z"

    ExpenseInput:
      type: object
      required:
        - description
        - amount
        - date
      properties:
        description:
          type: string
          example: "Grocery shopping"
        amount:
          type: number
          format: float
          example: 150.00
        currency:
          type: string
          example: "USD"
          default: "USD"
        date:
          type: string
          format: date
          example: "2025-10-15"
        category:
          type: string
          example: "Food"

    UserSummary:
      type: object
      properties:
        id:
          type: string
          example: "user_001"
        userName:
          type: string
          example: "John Doe"
        currentMonthExpense:
          type: object
          properties:
            amount:
              type: number
              format: float
              example: 1500.00
            currency:
              type: string
              example: "USD"
        expenseHistory:
          type: array
          items:
            type: object
            properties:
              month:
                type: string
                example: "2025-10"
              total:
                type: number
                format: float
                example: 1500.00
              currency:
                type: string
                example: "USD"